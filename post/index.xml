<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Serendipity_Blog</title>
    <link>https://serendipityerr.github.io/post/</link>
    <description>Recent content in Posts on Serendipity_Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Dec 2024 18:50:29 +0800</lastBuildDate>
    <atom:link href="https://serendipityerr.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2024.12.09</title>
      <link>https://serendipityerr.github.io/post/2024-12-09/</link>
      <pubDate>Mon, 09 Dec 2024 18:50:29 +0800</pubDate>
      <guid>https://serendipityerr.github.io/post/2024-12-09/</guid>
      <description>Solve the problem of export latex code in Markdown as pdf First, download VSCode and the &amp;ldquo;Markdown All in One&amp;rdquo; extension.&#xA;Second, &amp;ldquo;Ctrl + Shift + P&amp;rdquo; and input &amp;ldquo;Print current document to HTML&amp;rdquo;.&#xA;A html file is already created and with well-displayed latex equation.</description>
    </item>
    <item>
      <title>2024.10.18</title>
      <link>https://serendipityerr.github.io/post/2024-10-18/</link>
      <pubDate>Fri, 18 Oct 2024 15:28:15 +0800</pubDate>
      <guid>https://serendipityerr.github.io/post/2024-10-18/</guid>
      <description>Python permanently modifies pip mirror source If change the mirror source to Tsinghua Mirror Source, type the following code in the Terminal:&#xA;pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple Install Cuda In Virtual Environment of Conda First Run the code in the Terminal to determine the version of Cuda:&#xA;nvidia-smi CUDA Version is the version of cuda that the computer can support, so the version of cuda we want to install needs to be &amp;lt;= CUDA Version (backward compatible)</description>
    </item>
    <item>
      <title>2024.08.28</title>
      <link>https://serendipityerr.github.io/post/2024-08-28/</link>
      <pubDate>Wed, 28 Aug 2024 14:14:07 +0800</pubDate>
      <guid>https://serendipityerr.github.io/post/2024-08-28/</guid>
      <description>Image Pre-processing/Transformation train_tfm = transforms.Compose([ # Resize the images into the fixed size transforms.Resize((128, 128)), &amp;#39;&amp;#39;&amp;#39; Do some Image Enhancement &amp;#39;&amp;#39;&amp;#39; # ToTensor() should be the last transformation transforms.ToTensor(), ]) Geometric Transformations # Rotation transform_rotate = transforms.RandomRotation(degrees=30) # Translation transform_translate = transforms.RandomAffine(degrees=0, translate=(0.1, 0.1)) # Flipping transform_flip = transforms.RandomHorizontalFlip(p=0.5) # Scaling transform_scale = transforms.RandomResizedCrop(size=224, scale=(0.8, 1.0)) # Shearing transform_shear = transforms.RandomAffine(degrees=0, shear=20) Color Transformations # Brightness Adjustment transform_brightness = transforms.ColorJitter(brightness=0.5) # Contrast Adjustment transform_contrast = transforms.</description>
    </item>
    <item>
      <title>2024.08.11</title>
      <link>https://serendipityerr.github.io/post/2024-08-11/</link>
      <pubDate>Sun, 11 Aug 2024 12:09:12 +0800</pubDate>
      <guid>https://serendipityerr.github.io/post/2024-08-11/</guid>
      <description>Learning Diffusers Installation With pip&#xA;pip install --upgrade diffusers[torch] With conda&#xA;conda install -c conda-forge diffusers Use Directly call the pretrained model uploaded in diffusers:&#xA;import torch from diffusers import DDPMPipeline device = torch.device(&amp;#34;cuda&amp;#34; if torch.cuda.is_available() else &amp;#34;cpu&amp;#34;) # Load the butterfly pipeline butterfly_pipeline = DDPMPipeline.from_pretrained( &amp;#34;johnowhitaker/ddpm-butterflies-32px&amp;#34; ).to(device) # Create 8 images images = butterfly_pipeline(batch_size=8).images # View the result make_grid(images) Example Step 0: Login and Initialize some useful functions # Login from huggingface_hub import notebook_login notebook_login() # copy the token in import numpy as np import torch import torch.</description>
    </item>
    <item>
      <title>2024.08.02</title>
      <link>https://serendipityerr.github.io/post/2024-08-02/</link>
      <pubDate>Fri, 02 Aug 2024 11:22:51 +0800</pubDate>
      <guid>https://serendipityerr.github.io/post/2024-08-02/</guid>
      <description>&#xD;</description>
    </item>
    <item>
      <title>2024.07.20</title>
      <link>https://serendipityerr.github.io/post/2024-07-20/</link>
      <pubDate>Sat, 20 Jul 2024 14:13:42 +0800</pubDate>
      <guid>https://serendipityerr.github.io/post/2024-07-20/</guid>
      <description>Difference Between PCA and AutoEncoder PCA Suppose there are m n-dimensional data, $ X_{n \times m} = [x_1, x_2,&amp;hellip;, x_m]$, where each $x$ is an n-dimensional column vector.&#xA;Reduce Dimensionality Decentralize the data: $x_{i} = x_{i} - \frac{1}{m} \sum_{j=1}^{m} x_{j}$ and update $X$ Calculate the Covariance matrix: $C = \frac{1}{m} XX^T$ Take eigenvalue decomposition of the Covariance matrix $C$ and get the eigenvector matrix (the eigenvector is arranged in columns from the related largest to smallest eigenvalues).</description>
    </item>
    <item>
      <title>2024.07.18</title>
      <link>https://serendipityerr.github.io/post/2024-07-18/</link>
      <pubDate>Thu, 18 Jul 2024 23:45:09 +0800</pubDate>
      <guid>https://serendipityerr.github.io/post/2024-07-18/</guid>
      <description>Study on Score-Based Generative Modeling (●&amp;rsquo;◡&amp;rsquo;●)&#xA;About Score-Based Generative Modeling: the following article has given a clear explanation: Diffusion Model: SDE&#xA;A simple conclusion of the Score-Based Generative Modeling through Stochastic Differential Equations: Generalization of discrete models such as DDPM to continuous SDE forms, through predictor-corrector samplers to correct the solution of a numerical SDE solver.</description>
    </item>
    <item>
      <title>2024.07.16</title>
      <link>https://serendipityerr.github.io/post/2024-07-16/</link>
      <pubDate>Tue, 16 Jul 2024 14:16:38 +0800</pubDate>
      <guid>https://serendipityerr.github.io/post/2024-07-16/</guid>
      <description>Study how to build a github repository ԅ(¯﹃¯ԅ)&#xA;First create a github repository and set the repository name.&#xA;Run the code in order in the PowerShell under the target directory:&#xA;cd dir_name git init git add . git commit -m &amp;#34;first commit&amp;#34; git remote add origin https://github.com/.... git push origin main Study how to build a blog New a post ( •̀ .̫ •́ )✧&#xA;Run the code in order in the PowerShell:</description>
    </item>
    <item>
      <title>My First Blog</title>
      <link>https://serendipityerr.github.io/post/first/</link>
      <pubDate>Tue, 16 Jul 2024 13:40:30 +0800</pubDate>
      <guid>https://serendipityerr.github.io/post/first/</guid>
      <description>Hello Serendpity&amp;rsquo;s Blog This is Serendpity&amp;rsquo;s first blog post. Love you all! ( •̀ ω •́ )y</description>
    </item>
  </channel>
</rss>
